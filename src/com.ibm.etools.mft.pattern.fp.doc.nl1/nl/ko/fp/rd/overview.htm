<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ko-kr" xml:lang="ko-kr">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2009, 2012

All Rights Reserved * Licensed Materials - Property of IBM

-->
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta name="copyright" content="Copyright IBM Corporation 2009" />
	<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2009" />
	<meta name="abstract" content="레코드 분배"/>
	<!-- Licensed Materials Property of IBM -->
	<!-- US Government Users Restricted Rights -->
	<!-- Use, duplication or disclosure restricted by -->
	<!-- GSA ADP Schedule Contract with IBM Corp. -->
	<link rel="stylesheet" type="text/css" href="../../css/ibmdita.css" />
	<link rel="stylesheet" type="text/css" href="../../css/bip4.css" />
	<title>레코드 분배</title>
	<script language="JavaScript" src="../../help/LiveHelp.js" type="text/javascript"></script>
</head>
<body id="com.ibm.etools.mft.pattern.fp.rd.overview">
<h1 class="topictitle1">
	<span>레코드 분배</span></h1>
<div>
	<p class="shortdesc">
	레코드 분배 패턴을 사용하여 로컬 또는 원격 파일을 일련의 레코드로 처리하고
	트랜잭션 인터페이스로 하나 이상의 시스템을 업데이트하기 위해 각 레코드를
적용하는 방법을 제공할 수 있습니다.
패턴은 트랜잭션이 아닌 파일 시스템 인터페이스와 트랜잭션 인터페이스를 오류 핸들링과 브릿지 처리하여
데이터가 손실되지 않도록 합니다.</p>
</div>
<div class="image"><img src="./fp_rd.gif" alt="레코드 분배 아키텍처의 다이어그램"></img></div>
<div class="section">
	<h2 >컨텍스트</h2>
</div>
<p>이 패턴과 변수는 다음 컨텍스트에서 적용할 수 있습니다.</p>
	<ul>
	<li>파일 기반 통합 기능만 보유한 시스템을 새 트랜잭션
시스템과 통합합니다. 이 시나리오는 일반적으로 비즈니스가 보다 트랜잭션 방식으로 전환해야 하고
기술이 기존 시스템을 수용해야 하는 업데이트 프로그램에 속합니다.</li>
	<li>실시간 트랜잭션 데이터를 생성하도록 기존 시스템을 업그레이드하는 동안
임시 시스템 통합이 필요합니다.</li>
	<li>개별적으로 처리하고 라우팅해야 하는 트랜잭션 레코드 배치가 포함된 EDI(Electronic Data Interchange) 트랜잭션의
파일을 처리합니다.</li>
	<li>&quot;간격 끝&quot; 업데이트를 처리합니다. 예를 들어, 업무일이나 업무 주간이 끝났을 때의 업데이트는 트랜잭션 시스템으로 전달되어 사용량이 적은 시간에 배치 모드에서 처리되어야 합니다.</li>
	<li>참조 데이터를 배포합니다. 예를 들어, 제품 가격 책정 및 파트 카탈로그의 구성, 즉 업데이트가 시작 날짜와 연관되어 있어 업데이트 시간이 중요한 경우가 이에 해당합니다.</li>
</ul>
<div class="section"><h2>문제점</h2>
</div>
<p>이 패턴은 파일 기반과 트랜잭션 기반이라는 두 유형의 통합을 브릿지 처리합니다. 파일 시스템이 트랜잭션이 아니므로
파일에서 모든 레코드를 읽고 모든 레코드를 대상에 기록하는 작업을 브릿지 처리하는 트랜잭션을 수행할 수 없습니다. 따라서, 레코드가 손실되지 않도록 보장하는 오류 핸들링을 제공해야 합니다.
이 범주의 패턴은 파일을 처리하고 레코드를 분배할 때 데이터 손실 문제점을
해결합니다. 또한 일부 패턴 구현은 한 번만 전달 문제점을 해결합니다.
</p>
<p>이 패턴은 파일의 다양한 트랜잭션을 올바른 WebSphere MQ
목적지로 라우팅하는 문제점도 해결합니다.</p>

<div class="section"><h2>자세한 내용</h2>

<p>다음과 같은 경우 이 패턴을 사용하십시오.</p>
<ul>
<li>로컬 또는 원격 시스템에서 파일로 수신된 트랜잭션 배치가 있습니다.</li>
<li>다음과 같은 이유로 트랜잭션을 개별 트랜잭션으로 송신할 수 없습니다.
<ul>
	<li>파일 기반 통합 기능만 지원하는 소스 시스템의 기술적 제한이 있습니다.</li>
	<li>비즈니스 요구사항에 따라 배치(일괄처리)가 필요합니다(예:
근무일의 모든 트랜잭션 콜렉션).</li>
	<li>기존의 작업 관행을 준수해야 합니다(예: EDI 트랜잭션을 포함한 파일 사용).</li>
	</ul></li>
<li>대상 시스템이 개별 트랜잭션을 승인하도록 설계되었습니다.
이러한 시스템은 거의 실시간 시스템과 배치 파일에서 입력 사항을
가져오므로 트랜잭션 인터페이스를 제공합니다.</li>
<li>둘 이상의 시스템에 분배되어야 하는 트랜잭션을 포함한 배치 파일이 있습니다.</li>
<li>레코드를 처리해야 하며, 전체 파일을 다시 처리하여 실패를 핸들링할 수 있습니다.</li>
</ul>
<p>다음과 같은 경우에는 이 패턴을 사용하지 마십시오.</p>
<ul>
<li>임베드된 레코드가 있는 XML 파일을 처리합니다.
레코드 구문 분석 메커니즘이 이러한 임베드된 레코드에는 적용되지 않으며,
해당 레코드는 메시지 플로우 내의 임베드된 레코드를 추출하는 처리 패턴이 필요합니다.</li>
<li>한 번만 처리되어야 하는 레코드입니다.
</li>
</ul>

</div>
<div class="section"><h2><a name="Record Distributor_Solution">솔루션</a></h2>
<p>솔루션은 파일에서 레코드를 읽고 이를 올바른
WebSphere MQ 목적지로 라우팅하거나 단일 트랜잭션으로
잘못된 메시지 큐로 라우팅하는 메시지 플로우를 구현하는 것입니다.</p>



</div>
</body>
</html>
