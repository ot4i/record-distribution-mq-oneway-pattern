<c:if test="boolean($root/brokerSchema)" >
<%-- Tag exists --%>
<c:if test="string-length($root/brokerSchema) > 0">
<%-- and has a value--%>
BROKER SCHEMA <c:get select="$root/brokerSchema"/>
</c:if>
</c:if>
--  Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
--  $MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
--  $MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$

/*******************************************************
* Declare shared variables to record records sent to default
********************************************************/
DECLARE Defaults SHARED ROW;
DECLARE Files SHARED INTEGER 0;

	CREATE COMPUTE MODULE RecordDefault
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
/*******************************************************
* Increment default count for this file for log message
********************************************************/

	DECLARE I Integer 0;
	DECLARE J Integer 1;
	DECLARE ThisFileKey CHARACTER;
			SET ThisFileKey = InputLocalEnvironment.File.Directory||
										InputLocalEnvironment.File.Name||
										InputLocalEnvironment.File.TimeStamp;
			ACCUMULATE: BEGIN ATOMIC
				SET J = 0;
				-- search for a match
				SET I = 1;
					SEARCH: LOOP
					IF I > Files THEN
						-- No match 
						SET J = Files + 1;
						SET Defaults.Files[J].Key = ThisFileKey;
						SET Defaults.Files[J].Total = 1;
						SET Files = J;
						LEAVE SEARCH; 
					END IF;
					IF Defaults.Files[I].Key = ThisFileKey
						THEN SET Defaults.Files[I].Total = Defaults.Files[I].Total + 1;
						LEAVE SEARCH;
					END IF;
					SET I = I + 1;
					END LOOP SEARCH;
		END ACCUMULATE;

-- This is required so that message can be written to bad messages queue
	SET OutputRoot = InputRoot;
	END;
	END MODULE;