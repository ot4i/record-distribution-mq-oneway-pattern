<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" xml:lang="en-us">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2009, 2012

All Rights Reserved * Licensed Materials - Property of IBM

-->
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<meta name="copyright" content="Copyright IBM Corporation 2009" />
	<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2009" />
	<meta name="abstract" content="Record Distribution"/>
	<!-- Licensed Materials Property of IBM -->
	<!-- US Government Users Restricted Rights -->
	<!-- Use, duplication or disclosure restricted by -->
	<!-- GSA ADP Schedule Contract with IBM Corp. -->
	<link rel="stylesheet" type="text/css" href="../../css/ibmdita.css" />
	<link rel="stylesheet" type="text/css" href="../../css/bip4.css" />
	<title>Record Distribution</title>
	<script language="JavaScript" src="../../help/LiveHelp.js" type="text/javascript"></script>
</head>
<body id="com.ibm.etools.mft.pattern.fp.rd.overview">
<h1 class="topictitle1">
	<span>Record Distribution</span></h1>
<div>
	<p class="shortdesc">
	Use a Record Distribution pattern to provide the means to process a local or remote file as a series of 
	records and to apply each record to update one or more systems with transactional interfaces. The pattern 
	bridges a non-transactional file system interface, and transactional interfaces with error handling, to 
	ensure that data is not lost.</p>
</div>
<div class="image"><img src="./fp_rd.gif" alt="Diagram of record distribution achitecture"></img></div>
<div class="section">
	<h2 >The context</h2>
</div>
<p>This pattern and its variations can be applied in the following contexts:</p>
	<ul>
	<li>Integration of systems that have only file based integration capabilities with new transactional 
	systems. This scenario is typically part of an update program where the business has to move to a more 
	transactional approach and technology has to accommodate existing systems.</li>
	<li>Interim integration of systems is required while existing systems are upgraded to produce near 
	real-time transaction data.</li>
	<li>Processing files of Electronic Data Interchange (EDI) transactions that contain batches of 
	transaction records that must be processed and routed individually.</li>
	<li>Processing &quot;end of interval&quot; updates. For example, updates at the end of the business 
	day or week that must be passed to transactional systems and must be processed in a batch mode at 
	off-peak periods.</li>
	<li>Distribution of reference data. For example, product pricing and configuration of parts catalogs, 
	in particular when the updates are associated with a start date so that the timing of the update is critical.</li>
</ul>
<div class="section"><h2>The problem</h2>
</div>
<p>This pattern bridges two styles of integration, file based and transaction based. Because the file system
is not transactional, it is not possible to have a transaction that bridges the reading of all
records from a file and the writing of all records to a target. It is, therefore, necessary to provide error 
handling that can ensure that records are not lost. Patterns in this category address the problem of not losing 
data when a file is processed and records are distributed. Some pattern implementations also address the 
problem of once only delivery.
</p>
<p>This pattern also addresses the problem of routing different transactions within a file to the correct 
WebSphere MQ destination.</p>

<div class="section"><h2>Selection guidance</h2>

<p>Use this pattern when:</p>
<ul>
<li>You have batches of transactions that are received as files from local or remote systems.</li>
<li>Your transactions cannot be sent as individual transactions because of:
	<ul>
	<li>The technical limitations of source systems that support file based integration capabilities only.</li>
	<li>Business requirements that mandate batching, for example, the collection of all transactions 
	within a working day.</li>
	<li>Conformance to existing working practices, for example, the use of files containing EDI transactions.</li>
	</ul></li>
<li>Your target systems are designed to accept individual transactions. Such systems might take input from 
near real-time systems and from batch files, the systems therefore present a transactional interface.</li>
<li>You have batch files that contain transactions that must be distributed to more than one system.</li>
<li>Your records must be processed and failures can be handled by reprocessing the entire file.</li>
</ul>
<p>Do not use this pattern for:</p>
<ul>
<li>Processing XML files with embedded records. The record parsing mechanism does not apply to these embedded 
records and they require processing patterns that extract the embedded records within a message flow.</li>
<li>Records that must be processed once only.
</li>
</ul>

</div>
<div class="section"><h2><a name="Record Distributor_Solution">The solution</a></h2>
<p>The solution is to implement a message flow that reads a record from the file and routes it to the 
correct WebSphere MQ destination or to a bad message queue in a single transaction.</p>



</div>
</body>
</html>
